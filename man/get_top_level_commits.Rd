% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api-get-top-level-commits.R
\name{get_top_level_commits}
\alias{get_top_level_commits}
\title{All top-level commits}
\usage{
get_top_level_commits(since = NULL)
}
\arguments{
\item{since}{A commit SHA, e.g. as returned from \code{\link[=get_last_tag]{get_last_tag()}}.
If \code{NULL}, the entire log is retrieved.}
}
\value{
A \link{tibble} with at least two columns:
\itemize{
\item \code{commit}: the commit SHA
\item \code{message}: the commit message
}
}
\description{
Return all top-level commits since a particular version
as commit objects.
}
\examples{
# Create mock package in a temporary directory.
# Set open to TRUE if you want to play in the mock package.
with_demo_project({
  # Use functions as if inside the newly created package project.
  # (Or go and actually run code inside the newly created package project!)
  # Add a new R file.
  usethis::use_r("cool-function", open = FALSE)
  # Pretend we added useful code inside it.
  # Track the new R file with Git.
  gert::git_add("R/cool-function.R")
  gert::git_commit("- Add cool function.")
  # Bump version with fledge.
  fledge::bump_version()
  fledge::finalize_version()
  print(get_top_level_commits(since = NULL))
  print(fledge::get_last_tag())
})
}
